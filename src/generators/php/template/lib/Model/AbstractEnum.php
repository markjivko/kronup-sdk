<?php

/**
 * Abstract Enum Model
 *
 * @copyright (c) 2022-2023 kronup.io
 * @license   MIT
 * @package   kronup
 * @author    Mark Jivko
 * @link      https://kronup.io/
 *
 * NOTE: This class is auto-generated by kronup.io
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

abstract class AbstractEnum {
    /**
     * Current value
     */
    protected $_value = null;

    /**
     * Enumerator model constructor
     */
    public function __construct($value) {
        $this->set($value);
    }

    /**
     * String conversion
     */
    public function __toString() {
        return $this->get();
    }

    /**
     * Get the enumerator value
     */
    public function get() {
        return $this->_value;
    }

    /**
     * Set the enumerator value
     *
     * @param string|int $value
     * @return $this
     */
    public function set($value) {
        if (!in_array($value, static::getEnumValues())) {
            throw new \InvalidArgumentException("Invalid value");
        }

        $this->_value = $value;

        return $this;
    }

    /**
     * Allowed values of the enum
     *
     * @return string[]
     */
    public static function getEnumValues(): array {
        return array_values((new \ReflectionClass(static::class))->getConstants());
    }
}
