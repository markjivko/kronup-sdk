<?php

/**
 * kronup sdk
 *
 * @version   {{artifactVersion}}
 * @api       {{version}}
{{>partial_header}}
 */

namespace Kronup;
define("KRONUP-SDK", "{{artifactVersion}}/{{version}}");

use Kronup\Sdk\Caller;
use Kronup\Sdk\Config;
use RuntimeException;

class Sdk {
    /**
     * Caller configuration object
     *
     * @var \Kronup\Sdk\Config
     */
    protected $_config;

    /**
     * API operations
     *
     * @var \Kronup\Sdk\Caller\Api
     */
    protected $_api = null;

    /**
     * kronup sdk
     *
     * @var string $apiKey kronup API Key
     * @throws \RuntimeException
     */
    public function __construct(string $apiKey) {
        // PHP check
        if (version_compare(PHP_VERSION, "7.4.0") <= 0) {
            throw new RuntimeException("kronup SDK: PHP v7.4+ is required");
        }

        // Extensions check
        $extensions = [
            "mbstring" => "mb_strlen",
            "curl" => "curl_init",
            "json" => "json_encode",
        ];
        foreach ($extensions as $extName => $extFunction) {
            if (!function_exists($extFunction)) {
                throw new RuntimeException("kronup SDK: PHP extension '$extName' is required");
            }
        }

        // Store the configuration object
        $this->_config = new Config($apiKey);
    }

    /**
     * SDK Configuration
     *
     * @return \Kronup\Sdk\Config
     */
    public function config() {
        return $this->_config;
    }

    /**
     * API operations
     *
     * @return \Kronup\Sdk\Caller\Api
     */
    public function api(): Caller\Api {
        if (null === $this->_api) {
            $this->_api = new Caller\Api($this);
        }

        return $this->_api;
    }
}
